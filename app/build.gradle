apply plugin: 'com.android.application'
apply plugin: 'kotlin-android' // for kotlin lang support
apply plugin: 'kotlin-kapt' // for annotations: data binding, etc
apply plugin: 'androidx.navigation.safeargs.kotlin' // for navigation passed arguments
apply plugin: 'dagger.hilt.android.plugin'

android {
	compileSdkVersion targetSdkVer
	// if not specified, latest + whatever external libs use will be used = a mess
	buildToolsVersion buildToolsVer
	ndkVersion ndkVer

	// these config apply to all build types
	defaultConfig {
		// if not specified, package name from manifest will be used, will change when that one changes
		applicationId "asceapps.weatheria"
		minSdkVersion minSdkVer
		targetSdkVersion targetSdkVer
		versionCode 3
		versionName "0.2.1"

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
		vectorDrawables.useSupportLibrary = true

		// if i don't add the quotes separately, the generated var is typed in as a broken int
		buildConfigField("String", "WEATHER_APP_ID", "\"" + project.findProperty('weather_app_id') + "\"")
		resValue "string", "maps_api_key", (project.findProperty("maps_api_key") ?: "")

		// removes unused i18n in libs like AppCompat/play services/maps?
		resConfigs "en", "ar"//, "fr", "es", "zh", "de", "ja", "ru", "ko", "pt", "in"

		javaCompileOptions {
			annotationProcessorOptions {
				arguments += [
					"room.schemaLocation": "$projectDir/schemas".toString(),
					"room.incremental"   : "true"
				]
			}
		}
	}

	buildFeatures {
		dataBinding true
	}

	buildTypes {
		debug {
			applicationIdSuffix ".debug"
		}
		prerelease {
			debuggable true
			minifyEnabled true
			applicationIdSuffix '.prerelease'
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-prerelease-rules.pro'
		}
		release {
			minifyEnabled true
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
			ndk {
				debugSymbolLevel 'full' // include android vitals debug file in app bundle
			}
		}
	}

	compileOptions {
		// to use java 8 libs in api < 26. needed even with kotlin for time apis
		coreLibraryDesugaringEnabled true

		sourceCompatibility javaVer
		targetCompatibility javaVer
	}

	kotlinOptions {
		jvmTarget = javaVer
	}

}

dependencies {
	coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.1'

	// kotlin
	implementation "androidx.core:core-ktx:$coreVer"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVer"

	// coroutines
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVer"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVer"

	// to use viewModels delegate
	implementation "androidx.activity:activity-ktx:$activityVer"
	implementation "androidx.fragment:fragment-ktx:$fragmentVer"

	// general
	implementation "androidx.recyclerview:recyclerview:$recyclerViewVer"
	implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVer"
	implementation "androidx.swiperefreshlayout:swiperefreshlayout:$swipeRefreshVer"
	implementation "androidx.viewpager2:viewpager2:$viewPagerVer"
	implementation "com.google.android.material:material:$materialVer"

	// viewModel & liveData
	implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVer"
	implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVer"

	// nav
	// runtime offers findNavController() and navArgs property
	implementation "androidx.navigation:navigation-runtime-ktx:$navVer"
	implementation "androidx.navigation:navigation-fragment-ktx:$navVer"
	implementation "androidx.navigation:navigation-ui-ktx:$navVer"

	// anim vector drawable
	// core offers listeners, interpolators, etc
	implementation "androidx.core:core-animation:$animatorVer"
	implementation "androidx.vectordrawable:vectordrawable-animated:$vectorDrawableVer"

	// preferences fragment
	implementation "androidx.preference:preference-ktx:$preferenceVer"

	// room
	// runtime is core
	// ktx adds suspend and Flow support
	kapt "androidx.room:room-compiler:$roomVer"
	implementation "androidx.room:room-runtime:$roomVer"
	implementation "androidx.room:room-ktx:$roomVer"

	// retrofit
	implementation "com.squareup.retrofit2:retrofit:$retrofitVer"
	implementation "com.squareup.retrofit2:converter-gson:$retrofitVer"
	implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVer"

	// maps
	implementation "com.google.android.libraries.maps:maps:$mapsVer"

	// work manager
	implementation "androidx.work:work-runtime-ktx:$workVer"

	// hilt
	kapt "com.google.dagger:hilt-android-compiler:$hiltVer"
	implementation "com.google.dagger:hilt-android:$hiltVer"

	// hilt with jetpack (viewModel, workManager)
	kapt "androidx.hilt:hilt-compiler:$hiltJetpackVer"
	implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltJetpackVer"
	implementation "androidx.hilt:hilt-work:$hiltJetpackVer"

	// coil
	implementation "io.coil-kt:coil:$coilVer"

	// multi screen size support
	implementation 'com.intuit.sdp:sdp-android:1.0.6'
	implementation 'com.intuit.ssp:ssp-android:1.0.6'

	// android tests
	testImplementation 'junit:junit:4.13.1'
	androidTestImplementation 'androidx.test.ext:junit:1.1.2'
}
