apply plugin: "com.android.application"
apply plugin: "kotlin-android" // for kotlin lang support
apply plugin: "kotlin-kapt" // for annotations: data binding, etc
apply plugin: "dagger.hilt.android.plugin"

android {
	def targetSdkVer = 30
	compileSdkVersion targetSdkVer
	// if not specified, latest + whatever external libs use will be used = a mess
	buildToolsVersion "31.0.0-rc1"
	ndkVersion "22.0.7026061"

	// these config apply to all build types
	defaultConfig {
		// if not specified, package name from manifest will be used, will change when that one changes
		applicationId "asceapps.weatheria"
		minSdkVersion 21
		targetSdkVersion targetSdkVer
		versionCode 4
		versionName "0.3.1"

		vectorDrawables.useSupportLibrary = true

		testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

		// if i don't add the quotes separately, the generated var is typed in as a broken int
		buildConfigField("String", "WEATHER_APP_ID", "\"" + project.findProperty("weather_app_id") + "\"")
		resValue "string", "maps_api_key", (project.findProperty("maps_api_key") ?: "")

		// removes unused i18n in libs like AppCompat/play services/maps?
		resConfigs "en", "ar"//, "fr", "es", "zh", "de", "ja", "ru", "ko", "pt", "in"

		javaCompileOptions {
			annotationProcessorOptions {
				arguments += [
					"room.schemaLocation": "$projectDir/schemas".toString(),
					"room.incremental"   : "true"
				]
			}
		}
	}

	buildFeatures {
		dataBinding true
	}

	buildTypes {
		debug {
			applicationIdSuffix ".debug"
		}
		staging {
			debuggable true
			minifyEnabled true
			applicationIdSuffix ".staging"
			proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "release-rules.pro", "staging-rules.pro"
		}
		release {
			minifyEnabled true
			shrinkResources true // verify needed
			proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "release-rules.pro"
			ndk {
				debugSymbolLevel "full" // include android vitals debug file in app bundle
			}
		}
	}

	def javaVer = '1.8'
	compileOptions {
		// to use java 8 libs in api < 26. needed even with kotlin for time apis
		coreLibraryDesugaringEnabled true

		sourceCompatibility javaVer
		targetCompatibility javaVer
	}

	kotlinOptions {
		jvmTarget = javaVer
		// new kotlin compiler backend (supposedly faster, also for jetpack compose, and default in future)
		useIR = true
		freeCompilerArgs += [
			"-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi"
		]
	}

}

dependencies {
	coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.5"

	// kotlin
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVer"

	// coroutines
	def coroutineVer = '1.4.3-native-mt'
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVer"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVer"

	// general & ui
	implementation "androidx.core:core-ktx:1.5.0-beta03"
	implementation "androidx.recyclerview:recyclerview:1.2.0-beta02"
	implementation "androidx.constraintlayout:constraintlayout:2.1.0-beta01"
	implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"
	implementation "androidx.viewpager2:viewpager2:1.0.0"
	implementation "com.google.android.material:material:1.3.0"

	// to use viewModels delegate, new result system, and lots more
	implementation "androidx.activity:activity-ktx:1.3.0-alpha04"
	implementation "androidx.fragment:fragment-ktx:1.3.1"

	// viewModel & liveData
	// runtime offers new flow consumers (e.g addRepeatingJob)
	def lifecycleVer = '2.4.0-alpha01'
	implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVer"
	implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVer"

	// nav
	// runtime offers findNavController() and navArgs property
	def navVer = '2.3.4'
	implementation "androidx.navigation:navigation-runtime-ktx:$navVer"
	implementation "androidx.navigation:navigation-fragment-ktx:$navVer"
	implementation "androidx.navigation:navigation-ui-ktx:$navVer"

	// anim vector drawable
	// core offers listeners, interpolators, etc
	implementation "androidx.core:core-animation:1.0.0-alpha02"
	implementation "androidx.vectordrawable:vectordrawable-animated:1.1.0"

	// new preferences (fragment, etc.)
	implementation "androidx.preference:preference-ktx:1.1.1"

	// room
	// runtime is core
	// ktx adds suspend and Flow support
	def roomVer = '2.3.0-beta03'
	kapt "androidx.room:room-compiler:$roomVer"
	implementation "androidx.room:room-runtime:$roomVer"
	implementation "androidx.room:room-ktx:$roomVer"

	// retrofit
	def retrofitVer = '2.9.0'
	implementation "com.squareup.retrofit2:retrofit:$retrofitVer"
	implementation "com.squareup.retrofit2:converter-gson:$retrofitVer"
	implementation "com.squareup.okhttp3:logging-interceptor:5.0.0-alpha.2"

	// maps & location
	implementation "com.google.android.libraries.maps:maps:3.1.0-beta"
	implementation "com.google.android.gms:play-services-location:18.0.0"

	// work manager
	implementation "androidx.work:work-runtime-ktx:2.5.0"

	// hilt
	kapt "com.google.dagger:hilt-android-compiler:$hiltVer"
	implementation "com.google.dagger:hilt-android:$hiltVer"

	// hilt with jetpack (viewModel, workManager)
	def hiltJetpackVer = '1.0.0-alpha03'
	kapt "androidx.hilt:hilt-compiler:$hiltJetpackVer"
	implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltJetpackVer"
	implementation "androidx.hilt:hilt-work:$hiltJetpackVer"

	// coil
	implementation "io.coil-kt:coil:1.1.1"

	// multi screen size support
	implementation "com.intuit.sdp:sdp-android:1.0.6"
	implementation "com.intuit.ssp:ssp-android:1.0.6"

	// android tests
	testImplementation 'junit:junit:4.13.2'
	androidTestImplementation "androidx.test.ext:junit:1.1.2"
}
