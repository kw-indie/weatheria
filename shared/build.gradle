plugins {
	id 'com.android.library'
	id 'kotlin-android'
	id 'kotlin-kapt' // annotations: hilt, room
	id 'dagger.hilt.android.plugin'
}

android {
	compileSdk targetSdkVer
	buildToolsVersion buildToolsVer
	
	defaultConfig {
		minSdk minSdkVer
		targetSdk targetSdkVer

		consumerProguardFiles "consumer-rules.pro"

		Properties ps = new Properties()
		rootProject.file("local.properties").withInputStream { ps.load(it) }
		buildConfigField("String", "ACCU_WEATHER_KEY", ps.accu_weather_key)

		javaCompileOptions {
			annotationProcessorOptions {
				arguments += [
					"room.schemaLocation": "$projectDir/schemas".toString(),
					"room.incremental"   : "true"
				]
			}
		}
	}

	buildTypes {
		release {}
		staging {}
	}

	compileOptions {
		coreLibraryDesugaringEnabled true

		sourceCompatibility javaVer
		targetCompatibility javaVer
	}

	kotlinOptions {
		jvmTarget = javaVer
	}
}

hilt {
	// https://dagger.dev/hilt/gradle-setup#aggregating-task
	enableAggregatingTask = true
}

dependencies {
	coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugarVer"

	// coroutines
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVer"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVer"

	// core: latest and backward compatible android apis
	implementation "androidx.core:core-ktx:$coreVer"

	// retrofit.
	// using gson partly because it's already a transient dep in many other google libs
	implementation "com.squareup.retrofit2:retrofit:$retrofitVer"
	implementation "com.squareup.retrofit2:converter-gson:$retrofitVer"
	implementation "com.squareup.okhttp3:logging-interceptor:$okLoggerVer"

	// room
	kapt "androidx.room:room-compiler:$roomVer"
	// runtime is the core
	implementation "androidx.room:room-runtime:$roomVer"
	// ktx adds suspend and Flow support
	implementation "androidx.room:room-ktx:$roomVer"

	// hilt
	kapt "com.google.dagger:hilt-android-compiler:$hiltVer"
	api "com.google.dagger:hilt-android:$hiltVer" // also used by app
}