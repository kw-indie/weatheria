plugins {
	id 'com.android.library'
	id 'kotlin-android'
	id 'kotlin-kapt' // for annotations: room
	id 'dagger.hilt.android.plugin'
}

android {
	compileSdk targetSdkVer
	buildToolsVersion buildToolsVer
	
	defaultConfig {
		minSdk minSdkVer
		targetSdk targetSdkVer

		consumerProguardFiles "consumer-rules.pro"

		Properties ps = new Properties()
		rootProject.file("local.properties").withInputStream { ps.load(it) }
		buildConfigField("String", "ACCU_WEATHER_KEY", ps.accu_weather_key)

		javaCompileOptions {
			annotationProcessorOptions {
				arguments += [
					"room.schemaLocation": "$projectDir/schemas".toString(),
					"room.incremental"   : "true"
				]
			}
		}
	}

	buildTypes {
		release {
			proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'release-rules.pro'
		}
		staging {
			proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "release-rules.pro", "staging-rules.pro"
		}
	}

	compileOptions {
		coreLibraryDesugaringEnabled true

		sourceCompatibility javaVer
		targetCompatibility javaVer
	}

	kotlinOptions {
		jvmTarget = javaVer
	}
}

hilt {
	// https://dagger.dev/hilt/gradle-setup#aggregating-task
	enableAggregatingTask = true
}

dependencies {
	coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugarVer"

	// todo make all shared libs 'api' to avoid repetition in other modules
	// coroutines
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutineVer"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVer"

	// *
	implementation "androidx.collection:collection-ktx:$collectionVer"
	// core: latest and backward compatible android apis
	implementation "androidx.core:core-ktx:$coreVer"
	// *
	implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVer"

	// retrofit.
	// using gson partly because it's already a transient dep in many other google libs
	implementation "com.squareup.retrofit2:retrofit:$retrofitVer"
	implementation "com.squareup.retrofit2:converter-gson:$retrofitVer"
	implementation "com.squareup.okhttp3:logging-interceptor:$okLoggerVer"

	// room
	// runtime is core
	// ktx adds suspend and Flow support
	kapt "androidx.room:room-compiler:$roomVer"
	// fixme only needed here and app module, other modules don't wanna see
	api "androidx.room:room-runtime:$roomVer"
	implementation "androidx.room:room-ktx:$roomVer"

	// hilt
	kapt "com.google.dagger:hilt-android-compiler:$hiltVer"
	implementation "com.google.dagger:hilt-android:$hiltVer"

	// all below required transitively by hilt
	implementation "androidx.customview:customview:$customViewVer"
	implementation "androidx.activity:activity-ktx:$activityVer"
	implementation "androidx.fragment:fragment-ktx:$fragmentVer"
	implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVer"
	implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVer"
	implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycleVer"
}